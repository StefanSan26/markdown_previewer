{"version":3,"sources":["components/Preview.jsx","App.js","reportWebVitals.js","index.js"],"names":["Preview","children","className","id","dangerouslySetInnerHTML","initialState","__html","marked","parse","App","useState","mark","setmark","onChange","input","clean","target","value","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAQeA,EANC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACjB,OACC,qBAAKC,UAAU,UAAUC,GAAG,UAAUC,wBAAyBH,KCQ3DI,EAAe,CAACC,OAAOC,SAAOC,MALnB,iJAiCFC,MA1Bf,WAEC,MAAwBC,mBAASL,GAAjC,mBAAOM,EAAP,KAAaC,EAAb,KAaA,OACG,sBAAKV,UAAU,MAAf,UACC,0BAAUA,UAAU,SAASC,GAAG,SAASU,SAb1B,SAACC,GAEnB,IAEMC,EAAM,CACXT,OAHcC,SAAOC,MAAMM,EAAME,OAAOC,QAKzCC,QAAQC,IAAIJ,GACZH,EAAQG,MAOP,cAAC,EAAD,UACCJ,QCtBWS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0eee6440.chunk.js","sourcesContent":["import React from 'react';\n\nconst Preview = ({children}) => {\n\treturn (\n\t\t<div className=\"preview\" id=\"preview\" dangerouslySetInnerHTML={children}/>\n\t);\n};\n\nexport default Preview;","// import logo from './logo.svg';\nimport './App.css';\nimport {marked} from 'marked'\nimport {useState} from 'react'\nimport Preview from './components/Preview';\n\n\nconst initialText = `### How To Use The MarkDown Previewer \n1. Type in stuff on the left.\t\n2. See the live updates on the right.\t\nThat's it.  Pretty simple.`\n\nconst initialState = {__html:marked.parse(initialText)}\n\nfunction App() {\n\n\tconst [mark, setmark] = useState(initialState)\n\t\n\tconst handleChange=(input)=>{\n\n\t\tconst parsed = marked.parse(input.target.value)\n\t\t\n\t\tconst clean={\n\t\t\t__html:parsed\n\t\t}\n\t\tconsole.log(clean)\n\t\tsetmark(clean)\n\t}\n\n\treturn (\n    <div className=\"App\">\n     <textarea className=\"editor\" id='editor' onChange={handleChange}/>\n\t\t\n\t\t <Preview>\n\t\t\t{mark}\n\t\t </Preview>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}